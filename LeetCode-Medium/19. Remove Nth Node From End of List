/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int fun(ListNode* head){
        int c=1;
        ListNode* temp=head;
        while(temp->next!=NULL){
            c++;
            temp=temp->next;
        }
        return c;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head->next==NULL && n==1){
            return head->next;
        }
        int c=fun(head)-n;
        if(c==0){
            ListNode* t=head;
            head=head->next;
            delete t;
            return head;
        }
        ListNode* temp=head;
        c--;
        while(temp->next!=NULL && c--){
            temp=temp->next;
        }
        ListNode* d=temp->next;
        if(temp->next!=NULL)
        temp->next=temp->next->next;
        delete d;
        return head;
    }
};
