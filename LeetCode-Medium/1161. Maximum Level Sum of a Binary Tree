/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        if(root==null) return 0;
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        q.add(null);
        int sum=0,sum2=-9999999,maxi=0,level=1;
        while(!q.isEmpty()){
            TreeNode n=q.peek();
            q.remove();
            if(n!=null){
                sum+=n.val;
                if(n.left!=null) q.add(n.left);
                if(n.right!=null) q.add(n.right);
            }
            else{
                if(!q.isEmpty()) q.add(null);
                if(sum>sum2){
                    sum2=sum;
                    maxi=level;
                }
                sum=0;
                level++;
            }
        }
        return maxi;
    }
}
