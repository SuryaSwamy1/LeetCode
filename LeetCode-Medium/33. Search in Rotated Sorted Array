class Solution {
public:
    int fun(vector<int>nums,int l,int h,int target){
        while(l<=h){
            int mid=l+(h-l)/2;
            if(nums[mid]==target){
                return mid;
            }
            else if(nums[mid]<target){
                l=mid+1;
            }
            else{
                h=mid-1;
            }
        }
        return -1;
    }
    int search(vector<int>& nums, int target) {
        if(nums[0]<nums[nums.size()-1]){
            return fun(nums,0,nums.size()-1,target);
        }
        if(nums.size()==1){
            if(nums[0]==target){
                return 0;
            }
            return -1;
        }
        int l=0,h=nums.size()-1;
        while(l<=h){
            int mid=l+(h-l)/2;
            if(nums[mid]>nums[mid+1]){
                if(target>=nums[0] and target<=nums[mid]){
                    return fun(nums,0,mid,target);
                }
                else if(target>=nums[mid+1] and target<=nums[nums.size()-1]){
                    return fun(nums,mid+1,nums.size()-1,target);
                }
                else{
                    return -1;
                }
            }
            else if(nums[mid]<nums[l]){
                h=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return -1;
    }
};
