class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        vector<pair<int,int>>p;
        for(int i=0;i<mat.size();i++){
            sort(mat[i].begin(),mat[i].end(),greater<int>());
            int c=0;
            for(int j=0;j<mat[i].size();j++){
                if(mat[i][j]==1){
                    c++;
                }
            }
            p.push_back({c,i});
        }
        vector<int>v;
        sort(p.begin(),p.end());
        vector<pair<int,int>>::iterator it;
        for(it=p.begin();it!=p.end();it++){
            if(k==0){
                break;
            }
            v.push_back((*it).second);
            k--;
        }
        if(v.size()==0){
            v.push_back(0);
        }
        return v;
    }
};
