class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
       long long int m2=INT_MIN;
        long long int sum=0;
        if(piles.size()==1){
            if(piles[0]%h){
                sum+=1;
            }
            sum+=piles[0]/h;
        }
        for(int i=0;i<piles.size();i++){
            if(piles[i]>m2){
                m2=piles[i];
            }
        }
        long long int l=1,high=m2;
        while(l<=high){
            long long int mid=l+(high-l)/2;
            sum=0;
            for(int i=0;i<piles.size();i++){
                    if(piles[i]%mid){
                        sum+=1;
                    }
                    sum+=piles[i]/mid;
            }
            if(sum<=h){
                high=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return l;
    }
};
