class Solution {
public:
    vector<vector<string>>res;
    void fun2(vector<char>&v,vector<string>&ans){
        string s="";
        stack<char>q;
        for(int i=0;i<v.size();i++){
            if(v[i]=='(') q.push('(');
            else if(v[i]==')') if(!q.empty() and q.top()=='(') q.pop();
            s+=v[i];
        }
        if(q.empty())ans.push_back(s);
    }
    void fun(int idx,vector<char>a,vector<char>&v,int n,vector<string>&ans){
        if(idx==2*n){
            if(v.size()==2*n){
                int h=0,j=0;
                for(auto i:v){
                    if(i=='(') h++;
                    else j++;
                }
                if(j==h) fun2(v,ans);
            }
            return;
        }
        v.push_back(a[0]);
        fun(idx+1,a,v,n,ans);
        v.pop_back();
        v.push_back(a[1]);
        fun(idx+1,a,v,n,ans);
        v.pop_back();
    }
    vector<string> generateParenthesis(int n) {
        vector<string>ans;
        vector<char>a={'(',')'};
        vector<char>v;
        fun(0,a,v,n,ans);
        return ans;
    }
};       
