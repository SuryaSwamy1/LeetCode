/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int deepestLeavesSum(TreeNode root) {
        if(root==null) return 0;
        int val=fun(root);
        int[] arr=new int[1];
        return fun2(root,val,arr);
    }
    int fun(TreeNode root){
        if(root==null) return 0;
        int l=fun(root.left);
        int h=fun(root.right);
        return Math.max(l,h)+1;
    }
    int fun2(TreeNode root,int val,int arr[]){
        if(root==null) return 0;
        val--;
        fun2(root.left,val,arr);
        if(root.left==null && root.right==null && val==0) arr[0]+=root.val;
        fun2(root.right,val,arr);
        return arr[0];
    }
}
