class Solution {
public:
    int minDominoRotations(vector<int>& tops, vector<int>& bottoms) {
        map<int,int>m;
        for(int i=0;i<tops.size();i++){
            m[tops[i]]++;
        }
        int c1=0,c2=0,d=INT_MAX;
        int c3=0,c4=0,d2=INT_MAX;
        map<int,int>::iterator it;
        for(it=m.begin();it!=m.end();it++){
            c1=0,c2=0;
             c3=0;
            c4=0;
            for(int i=0;i<tops.size();i++){
                if(tops[i]==(*it).first){
                    c1++;
                }
                else if(bottoms[i]==(*it).first){
                    c2++;
                }
                if(bottoms[i]==(*it).first){
                    c3++;
                }
                else if(tops[i]==(*it).first){
                    c4++;
                }
            }
            if(c1+c2==tops.size()){
                d=min(c2,d);
            }
            if(c3+c4==bottoms.size()){
                d2=min(d2,c4);
            }
        }
        if(d==INT_MAX && d2==INT_MAX){
            return -1;
        }
        return min(d,d2);
    }
};
