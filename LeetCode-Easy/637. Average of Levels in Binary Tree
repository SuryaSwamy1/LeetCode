/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> v;
        int c=0;
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        double sum=0;
        while(!q.empty()){
            TreeNode* n=q.front();
            q.pop();
            if(n!=NULL){
                sum+=n->val;
                c++;
                if(n->left!=NULL){
                    q.push(n->left);
                }
                if(n->right!=NULL){
                    q.push(n->right);
                }
            }
            else{
                if(!q.empty()){
                    q.push(NULL);
                    double sum2=sum/c;
                    v.push_back(sum2);
                    sum2=0;
                    sum=0;
                    c=0;
                }
                else{
                    double sum2=sum/c;
                    v.push_back(sum2);
                }
            }
        }
        
        return v;
    }
};
